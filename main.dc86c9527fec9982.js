(self.webpackChunkcephelometrics=self.webpackChunkcephelometrics||[]).push([[179],{4418:(_c,Ls,Ln)=>{"use strict";function pn(n){return"function"==typeof n}function Er(n){const e=n(r=>{Error.call(r),r.stack=(new Error).stack});return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}const Nn=Er(n=>function(e){n(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((r,i)=>`${i+1}) ${r.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e});function zo(n,t){if(n){const e=n.indexOf(t);0<=e&&n.splice(e,1)}}class qn{constructor(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._finalizers=null}unsubscribe(){let t;if(!this.closed){this.closed=!0;const{_parentage:e}=this;if(e)if(this._parentage=null,Array.isArray(e))for(const o of e)o.remove(this);else e.remove(this);const{initialTeardown:r}=this;if(pn(r))try{r()}catch(o){t=o instanceof Nn?o.errors:[o]}const{_finalizers:i}=this;if(i){this._finalizers=null;for(const o of i)try{us(o)}catch(s){t=t??[],s instanceof Nn?t=[...t,...s.errors]:t.push(s)}}if(t)throw new Nn(t)}}add(t){var e;if(t&&t!==this)if(this.closed)us(t);else{if(t instanceof qn){if(t.closed||t._hasParent(this))return;t._addParent(this)}(this._finalizers=null!==(e=this._finalizers)&&void 0!==e?e:[]).push(t)}}_hasParent(t){const{_parentage:e}=this;return e===t||Array.isArray(e)&&e.includes(t)}_addParent(t){const{_parentage:e}=this;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t}_removeParent(t){const{_parentage:e}=this;e===t?this._parentage=null:Array.isArray(e)&&zo(e,t)}remove(t){const{_finalizers:e}=this;e&&zo(e,t),t instanceof qn&&t._removeParent(this)}}qn.EMPTY=(()=>{const n=new qn;return n.closed=!0,n})();const cs=qn.EMPTY;function AA(n){return n instanceof qn||n&&"closed"in n&&pn(n.remove)&&pn(n.add)&&pn(n.unsubscribe)}function us(n){pn(n)?n():n.unsubscribe()}const vn={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},Go={setTimeout(n,t,...e){const{delegate:r}=Go;return r?.setTimeout?r.setTimeout(n,t,...e):setTimeout(n,t,...e)},clearTimeout(n){const{delegate:t}=Go;return(t?.clearTimeout||clearTimeout)(n)},delegate:void 0};function Ns(n){Go.setTimeout(()=>{const{onUnhandledError:t}=vn;if(!t)throw n;t(n)})}function _a(){}const Zm=Wf("C",void 0,void 0);function Wf(n,t,e){return{kind:n,value:t,error:e}}let lA=null;function od(n){if(vn.useDeprecatedSynchronousErrorHandling){const t=!lA;if(t&&(lA={errorThrown:!1,error:null}),n(),t){const{errorThrown:e,error:r}=lA;if(lA=null,e)throw r}}else n()}class bc extends qn{constructor(t){super(),this.isStopped=!1,t?(this.destination=t,AA(t)&&t.add(this)):this.destination=r_}static create(t,e,r){return new Bc(t,e,r)}next(t){this.isStopped?Xf(function id(n){return Wf("N",n,void 0)}(t),this):this._next(t)}error(t){this.isStopped?Xf(function Cc(n){return Wf("E",void 0,n)}(t),this):(this.isStopped=!0,this._error(t))}complete(){this.isStopped?Xf(Zm,this):(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe(),this.destination=null)}_next(t){this.destination.next(t)}_error(t){try{this.destination.error(t)}finally{this.unsubscribe()}}_complete(){try{this.destination.complete()}finally{this.unsubscribe()}}}const qf=Function.prototype.bind;function $f(n,t){return qf.call(n,t)}class Jm{constructor(t){this.partialObserver=t}next(t){const{partialObserver:e}=this;if(e.next)try{e.next(t)}catch(r){sl(r)}}error(t){const{partialObserver:e}=this;if(e.error)try{e.error(t)}catch(r){sl(r)}else sl(t)}complete(){const{partialObserver:t}=this;if(t.complete)try{t.complete()}catch(e){sl(e)}}}class Bc extends bc{constructor(t,e,r){let i;if(super(),pn(t)||!t)i={next:t??void 0,error:e??void 0,complete:r??void 0};else{let o;this&&vn.useDeprecatedNextContext?(o=Object.create(t),o.unsubscribe=()=>this.unsubscribe(),i={next:t.next&&$f(t.next,o),error:t.error&&$f(t.error,o),complete:t.complete&&$f(t.complete,o)}):i=t}this.destination=new Jm(i)}}function sl(n){vn.useDeprecatedSynchronousErrorHandling?function cA(n){vn.useDeprecatedSynchronousErrorHandling&&lA&&(lA.errorThrown=!0,lA.error=n)}(n):Ns(n)}function Xf(n,t){const{onStoppedNotification:e}=vn;e&&Go.setTimeout(()=>e(n,t))}const r_={closed:!0,next:_a,error:function n_(n){throw n},complete:_a},Yf="function"==typeof Symbol&&Symbol.observable||"@@observable";function uA(n){return n}function ev(n){return 0===n.length?uA:1===n.length?n[0]:function(e){return n.reduce((r,i)=>i(r),e)}}let vr=(()=>{class n{constructor(e){e&&(this._subscribe=e)}lift(e){const r=new n;return r.source=this,r.operator=e,r}subscribe(e,r,i){const o=function s_(n){return n&&n instanceof bc||function o_(n){return n&&pn(n.next)&&pn(n.error)&&pn(n.complete)}(n)&&AA(n)}(e)?e:new Bc(e,r,i);return od(()=>{const{operator:s,source:a}=this;o.add(s?s.call(o,a):a?this._subscribe(o):this._trySubscribe(o))}),o}_trySubscribe(e){try{return this._subscribe(e)}catch(r){e.error(r)}}forEach(e,r){return new(r=Zf(r))((i,o)=>{const s=new Bc({next:a=>{try{e(a)}catch(l){o(l),s.unsubscribe()}},error:o,complete:i});this.subscribe(s)})}_subscribe(e){var r;return null===(r=this.source)||void 0===r?void 0:r.subscribe(e)}[Yf](){return this}pipe(...e){return ev(e)(this)}toPromise(e){return new(e=Zf(e))((r,i)=>{let o;this.subscribe(s=>o=s,s=>i(s),()=>r(o))})}}return n.create=t=>new n(t),n})();function Zf(n){var t;return null!==(t=n??vn.Promise)&&void 0!==t?t:Promise}const a_=Er(n=>function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"});let Tr=(()=>{class n extends vr{constructor(){super(),this.closed=!1,this.currentObservers=null,this.observers=[],this.isStopped=!1,this.hasError=!1,this.thrownError=null}lift(e){const r=new tv(this,this);return r.operator=e,r}_throwIfClosed(){if(this.closed)throw new a_}next(e){od(()=>{if(this._throwIfClosed(),!this.isStopped){this.currentObservers||(this.currentObservers=Array.from(this.observers));for(const r of this.currentObservers)r.next(e)}})}error(e){od(()=>{if(this._throwIfClosed(),!this.isStopped){this.hasError=this.isStopped=!0,this.thrownError=e;const{observers:r}=this;for(;r.length;)r.shift().error(e)}})}complete(){od(()=>{if(this._throwIfClosed(),!this.isStopped){this.isStopped=!0;const{observers:e}=this;for(;e.length;)e.shift().complete()}})}unsubscribe(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null}get observed(){var e;return(null===(e=this.observers)||void 0===e?void 0:e.length)>0}_trySubscribe(e){return this._throwIfClosed(),super._trySubscribe(e)}_subscribe(e){return this._throwIfClosed(),this._checkFinalizedStatuses(e),this._innerSubscribe(e)}_innerSubscribe(e){const{hasError:r,isStopped:i,observers:o}=this;return r||i?cs:(this.currentObservers=null,o.push(e),new qn(()=>{this.currentObservers=null,zo(o,e)}))}_checkFinalizedStatuses(e){const{hasError:r,thrownError:i,isStopped:o}=this;r?e.error(i):o&&e.complete()}asObservable(){const e=new vr;return e.source=this,e}}return n.create=(t,e)=>new tv(t,e),n})();class tv extends Tr{constructor(t,e){super(),this.destination=t,this.source=e}next(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===r||r.call(e,t)}error(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===r||r.call(e,t)}complete(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)}_subscribe(t){var e,r;return null!==(r=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==r?r:cs}}function Ec(n){return pn(n?.lift)}function Mr(n){return t=>{if(Ec(t))return t.lift(function(e){try{return n(e,this)}catch(r){this.error(r)}});throw new TypeError("Unable to lift unknown Observable type")}}function yr(n,t,e,r,i){return new A_(n,t,e,r,i)}class A_ extends bc{constructor(t,e,r,i,o,s){super(t),this.onFinalize=o,this.shouldUnsubscribe=s,this._next=e?function(a){try{e(a)}catch(l){t.error(l)}}:super._next,this._error=i?function(a){try{i(a)}catch(l){t.error(l)}finally{this.unsubscribe()}}:super._error,this._complete=r?function(){try{r()}catch(a){t.error(a)}finally{this.unsubscribe()}}:super._complete}unsubscribe(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){const{closed:e}=this;super.unsubscribe(),!e&&(null===(t=this.onFinalize)||void 0===t||t.call(this))}}}function Mt(n,t){return Mr((e,r)=>{let i=0;e.subscribe(yr(r,o=>{r.next(n.call(t,o,i++))}))})}function Do(n){return this instanceof Do?(this.v=n,this):new Do(n)}function Ao(n,t,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,r=e.apply(n,t||[]),o=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(C){r[C]&&(i[C]=function(y){return new Promise(function(E,I){o.push([C,y,E,I])>1||a(C,y)})})}function a(C,y){try{!function l(C){C.value instanceof Do?Promise.resolve(C.value.v).then(c,f):v(o[0][2],C)}(r[C](y))}catch(E){v(o[0][3],E)}}function c(C){a("next",C)}function f(C){a("throw",C)}function v(C,y){C(y),o.shift(),o.length&&a(o[0][0],o[0][1])}}function Fc(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,t=n[Symbol.asyncIterator];return t?t.call(n):(n=function sv(n){var t="function"==typeof Symbol&&Symbol.iterator,e=t&&n[t],r=0;if(e)return e.call(n);if(n&&"number"==typeof n.length)return{next:function(){return n&&r>=n.length&&(n=void 0),{value:n&&n[r++],done:!n}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(n),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(o){e[o]=n[o]&&function(s){return new Promise(function(a,l){!function i(o,s,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},s)}(a,l,(s=n[o](s)).done,s.value)})}}}const cd=n=>n&&"number"==typeof n.length&&"function"!=typeof n;function ud(n){return pn(n?.then)}function Al(n){return pn(n[Yf])}function dd(n){return Symbol.asyncIterator&&pn(n?.[Symbol.asyncIterator])}function Tc(n){return new TypeError(`You provided ${null!==n&&"object"==typeof n?"an invalid object":`'${n}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)}const fd=function hd(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}();function tp(n){return pn(n?.[fd])}function uv(n){return Ao(this,arguments,function*(){const e=n.getReader();try{for(;;){const{value:r,done:i}=yield Do(e.read());if(i)return yield Do(void 0);yield yield Do(r)}}finally{e.releaseLock()}})}function dv(n){return pn(n?.getReader)}function lo(n){if(n instanceof vr)return n;if(null!=n){if(Al(n))return function an(n){return new vr(t=>{const e=n[Yf]();if(pn(e.subscribe))return e.subscribe(t);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}(n);if(cd(n))return function pd(n){return new vr(t=>{for(let e=0;e<n.length&&!t.closed;e++)t.next(n[e]);t.complete()})}(n);if(ud(n))return function np(n){return new vr(t=>{n.then(e=>{t.closed||(t.next(e),t.complete())},e=>t.error(e)).then(null,Ns)})}(n);if(dd(n))return gd(n);if(tp(n))return function Os(n){return new vr(t=>{for(const e of n)if(t.next(e),t.closed)return;t.complete()})}(n);if(dv(n))return function hv(n){return gd(uv(n))}(n)}throw Tc(n)}function gd(n){return new vr(t=>{(function fv(n,t){var e,r,i,o;return function Ic(n,t,e,r){return new(e||(e=Promise))(function(o,s){function a(f){try{c(r.next(f))}catch(v){s(v)}}function l(f){try{c(r.throw(f))}catch(v){s(v)}}function c(f){f.done?o(f.value):function i(o){return o instanceof e?o:new e(function(s){s(o)})}(f.value).then(a,l)}c((r=r.apply(n,t||[])).next())})}(this,void 0,void 0,function*(){try{for(e=Fc(n);!(r=yield e.next()).done;)if(t.next(r.value),t.closed)return}catch(s){i={error:s}}finally{try{r&&!r.done&&(o=e.return)&&(yield o.call(e))}finally{if(i)throw i.error}}t.complete()})})(n,t).catch(e=>t.error(e))})}function Ps(n,t,e,r=0,i=!1){const o=t.schedule(function(){e(),i?n.add(this.schedule(null,r)):this.unsubscribe()},r);if(n.add(o),!i)return o}function ci(n,t,e=1/0){return pn(t)?ci((r,i)=>Mt((o,s)=>t(r,o,i,s))(lo(n(r,i))),e):("number"==typeof t&&(e=t),Mr((r,i)=>function pv(n,t,e,r,i,o,s,a){const l=[];let c=0,f=0,v=!1;const C=()=>{v&&!l.length&&!c&&t.complete()},y=I=>c<r?E(I):l.push(I),E=I=>{o&&t.next(I),c++;let M=!1;lo(e(I,f++)).subscribe(yr(t,F=>{i?.(F),o?y(F):t.next(F)},()=>{M=!0},void 0,()=>{if(M)try{for(c--;l.length&&c<r;){const F=l.shift();s?Ps(t,s,()=>E(F)):E(F)}C()}catch(F){t.error(F)}}))};return n.subscribe(yr(t,y,()=>{v=!0,C()})),()=>{a?.()}}(r,i,n,e)))}function ll(n=1/0){return ci(uA,n)}const Fo=new vr(n=>n.complete());function rp(n){return n[n.length-1]}function gv(n){return pn(rp(n))?n.pop():void 0}function Mc(n){return function g_(n){return n&&pn(n.schedule)}(rp(n))?n.pop():void 0}function cl(n,t=0){return Mr((e,r)=>{e.subscribe(yr(r,i=>Ps(r,n,()=>r.next(i),t),()=>Ps(r,n,()=>r.complete(),t),i=>Ps(r,n,()=>r.error(i),t)))})}function ip(n,t=0){return Mr((e,r)=>{r.add(n.schedule(()=>e.subscribe(r),t))})}function vv(n,t){if(!n)throw new Error("Iterable cannot be null");return new vr(e=>{Ps(e,t,()=>{const r=n[Symbol.asyncIterator]();Ps(e,t,()=>{r.next().then(i=>{i.done?e.complete():e.next(i.value)})},0,!0)})})}function xr(n,t){return t?function Lc(n,t){if(null!=n){if(Al(n))return function md(n,t){return lo(n).pipe(ip(t),cl(t))}(n,t);if(cd(n))return function xc(n,t){return new vr(e=>{let r=0;return t.schedule(function(){r===n.length?e.complete():(e.next(n[r++]),e.closed||this.schedule())})})}(n,t);if(ud(n))return function mv(n,t){return lo(n).pipe(ip(t),cl(t))}(n,t);if(dd(n))return vv(n,t);if(tp(n))return function v_(n,t){return new vr(e=>{let r;return Ps(e,t,()=>{r=n[fd](),Ps(e,t,()=>{let i,o;try{({value:i,done:o}=r.next())}catch(s){return void e.error(s)}o?e.complete():e.next(i)},0,!0)}),()=>pn(r?.return)&&r.return()})}(n,t);if(dv(n))return function vd(n,t){return vv(uv(n),t)}(n,t)}throw Tc(n)}(n,t):lo(n)}function yv(n={}){const{connector:t=(()=>new Tr),resetOnError:e=!0,resetOnComplete:r=!0,resetOnRefCountZero:i=!0}=n;return o=>{let s,a,l,c=0,f=!1,v=!1;const C=()=>{a?.unsubscribe(),a=void 0},y=()=>{C(),s=l=void 0,f=v=!1},E=()=>{const I=s;y(),I?.unsubscribe()};return Mr((I,M)=>{c++,!v&&!f&&C();const F=l=l??t();M.add(()=>{c--,0===c&&!v&&!f&&(a=ul(E,i))}),F.subscribe(M),!s&&c>0&&(s=new Bc({next:P=>F.next(P),error:P=>{v=!0,C(),a=ul(y,e,P),F.error(P)},complete:()=>{f=!0,C(),a=ul(y,r),F.complete()}}),lo(I).subscribe(s))})(o)}}function ul(n,t,...e){if(!0===t)return void n();if(!1===t)return;const r=new Bc({next:()=>{r.unsubscribe(),n()}});return t(...e).subscribe(r)}function Fn(n){for(let t in n)if(n[t]===Fn)return t;throw Error("Could not find renamed property on target object.")}function hA(n,t){for(const e in t)t.hasOwnProperty(e)&&!n.hasOwnProperty(e)&&(n[e]=t[e])}function $n(n){if("string"==typeof n)return n;if(Array.isArray(n))return"["+n.map($n).join(", ")+"]";if(null==n)return""+n;if(n.overriddenName)return`${n.overriddenName}`;if(n.name)return`${n.name}`;const t=n.toString();if(null==t)return""+t;const e=t.indexOf("\n");return-1===e?t:t.substring(0,e)}function Fi(n,t){return null==n||""===n?null===t?"":t:null==t||""===t?n:n+" "+t}const w_=Fn({__forward_ref__:Fn});function Xn(n){return n.__forward_ref__=Xn,n.toString=function(){return $n(this())},n}function Ft(n){return op(n)?n():n}function op(n){return"function"==typeof n&&n.hasOwnProperty(w_)&&n.__forward_ref__===Xn}function sp(n){return n&&!!n.\u0275providers}const yd="https://g.co/ng/security#xss";class xe extends Error{constructor(t,e){super(function fA(n,t){return`NG0${Math.abs(n)}${t?": "+t.trim():""}`}(t,e)),this.code=t}}function kt(n){return"string"==typeof n?n:null==n?"":String(n)}function dl(n,t){throw new xe(-201,!1)}function co(n,t){null==n&&function Bn(n,t,e,r){throw new Error(`ASSERTION ERROR: ${n}`+(null==r?"":` [Expected=> ${e} ${r} ${t} <=Actual]`))}(t,n,null,"!=")}function lt(n){return{token:n.token,providedIn:n.providedIn||null,factory:n.factory,value:void 0}}function Sn(n){return{providers:n.providers||[],imports:n.imports||[]}}function wd(n){return ui(n,_d)||ui(n,Cv)}function ui(n,t){return n.hasOwnProperty(t)?n[t]:null}function _v(n){return n&&(n.hasOwnProperty(ap)||n.hasOwnProperty(Cd))?n[ap]:null}const _d=Fn({\u0275prov:Fn}),ap=Fn({\u0275inj:Fn}),Cv=Fn({ngInjectableDef:Fn}),Cd=Fn({ngInjectorDef:Fn});var Bt=(()=>((Bt=Bt||{})[Bt.Default=0]="Default",Bt[Bt.Host=1]="Host",Bt[Bt.Self=2]="Self",Bt[Bt.SkipSelf=4]="SkipSelf",Bt[Bt.Optional=8]="Optional",Bt))();let bd;function Vr(n){const t=bd;return bd=n,t}function Nc(n,t,e){const r=wd(n);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:e&Bt.Optional?null:void 0!==t?t:void dl($n(n))}const Yn=(()=>typeof globalThis<"u"&&globalThis||typeof global<"u"&&global||typeof window<"u"&&window||typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self)(),Oc={},Ap="__NG_DI_FLAG__",Bd="ngTempTokenPath",T_=/\n/gm,Bv="__source";let Pc;function Us(n){const t=Pc;return Pc=n,t}function x_(n,t=Bt.Default){if(void 0===Pc)throw new xe(-203,!1);return null===Pc?Nc(n,void 0,t):Pc.get(n,t&Bt.Optional?null:void 0,t)}function Ge(n,t=Bt.Default){return(function F_(){return bd}()||x_)(Ft(n),t)}function Kt(n,t=Bt.Default){return Ge(n,Ed(t))}function Ed(n){return typeof n>"u"||"number"==typeof n?n:0|(n.optional&&8)|(n.host&&1)|(n.self&&2)|(n.skipSelf&&4)}function lp(n){const t=[];for(let e=0;e<n.length;e++){const r=Ft(n[e]);if(Array.isArray(r)){if(0===r.length)throw new xe(900,!1);let i,o=Bt.Default;for(let s=0;s<r.length;s++){const a=r[s],l=L_(a);"number"==typeof l?-1===l?i=a.token:o|=l:i=a}t.push(Ge(i,o))}else t.push(Ge(r))}return t}function Uc(n,t){return n[Ap]=t,n.prototype[Ap]=t,n}function L_(n){return n[Ap]}function Rs(n){return{toString:n}.toString()}var ki=(()=>((ki=ki||{})[ki.OnPush=0]="OnPush",ki[ki.Default=1]="Default",ki))(),Wo=(()=>{return(n=Wo||(Wo={}))[n.Emulated=0]="Emulated",n[n.None=2]="None",n[n.ShadowDom=3]="ShadowDom",Wo;var n})();const qo={},wn=[],Qs=Fn({\u0275cmp:Fn}),To=Fn({\u0275dir:Fn}),up=Fn({\u0275pipe:Fn}),ks=Fn({\u0275mod:Fn}),Qn=Fn({\u0275fac:Fn}),fl=Fn({__NG_ELEMENT_ID__:Fn});let di=0;function wr(n){return Rs(()=>{const e=!0===n.standalone,r={},i={type:n.type,providersResolver:null,decls:n.decls,vars:n.vars,factory:null,template:n.template||null,consts:n.consts||null,ngContentSelectors:n.ngContentSelectors,hostBindings:n.hostBindings||null,hostVars:n.hostVars||0,hostAttrs:n.hostAttrs||null,contentQueries:n.contentQueries||null,declaredInputs:r,inputs:null,outputs:null,exportAs:n.exportAs||null,onPush:n.changeDetection===ki.OnPush,directiveDefs:null,pipeDefs:null,standalone:e,dependencies:e&&n.dependencies||null,getStandaloneInjector:null,selectors:n.selectors||wn,viewQuery:n.viewQuery||null,features:n.features||null,data:n.data||{},encapsulation:n.encapsulation||Wo.Emulated,id:"c"+di++,styles:n.styles||wn,_:null,setInput:null,schemas:n.schemas||null,tView:null,findHostDirectiveDefs:null,hostDirectives:null},o=n.dependencies,s=n.features;return i.inputs=dp(n.inputs,r),i.outputs=dp(n.outputs),s&&s.forEach(a=>a(i)),i.directiveDefs=o?()=>("function"==typeof o?o():o).map(pl).filter(zn):null,i.pipeDefs=o?()=>("function"==typeof o?o():o).map(Zn).filter(zn):null,i})}function pl(n){return En(n)||fi(n)}function zn(n){return null!==n}function On(n){return Rs(()=>({type:n.type,bootstrap:n.bootstrap||wn,declarations:n.declarations||wn,imports:n.imports||wn,exports:n.exports||wn,transitiveCompileScopes:null,schemas:n.schemas||null,id:n.id||null}))}function dp(n,t){if(null==n)return qo;const e={};for(const r in n)if(n.hasOwnProperty(r)){let i=n[r],o=i;Array.isArray(i)&&(o=i[1],i=i[0]),e[i]=r,t&&(t[i]=o)}return e}const mt=wr;function hi(n){return{type:n.type,name:n.name,factory:null,pure:!1!==n.pure,standalone:!0===n.standalone,onDestroy:n.type.prototype.ngOnDestroy||null}}function En(n){return n[Qs]||null}function fi(n){return n[To]||null}function Zn(n){return n[up]||null}function Lr(n,t){const e=n[ks]||null;if(!e&&!0===t)throw new Error(`Type ${$n(n)} does not have '\u0275mod' property.`);return e}function po(n){return Array.isArray(n)&&"object"==typeof n[1]}function $o(n){return Array.isArray(n)&&!0===n[1]}function Kc(n){return 0!=(4&n.flags)}function zc(n){return n.componentOffset>-1}function Gc(n){return 1==(1&n.flags)}function Xo(n){return null!==n.template}function O_(n){return 0!=(256&n[2])}function gA(n,t){return n.hasOwnProperty(Qn)?n[Qn]:null}class Td{constructor(t,e,r){this.previousValue=t,this.currentValue=e,this.firstChange=r}isFirstChange(){return this.firstChange}}function go(){return Tv}function Tv(n){return n.type.prototype.ngOnChanges&&(n.setInput=Q_),R_}function R_(){const n=xv(this),t=n?.current;if(t){const e=n.previous;if(e===qo)n.previous=t;else for(let r in t)e[r]=t[r];n.current=null,this.ngOnChanges(t)}}function Q_(n,t,e,r){const i=this.declaredInputs[e],o=xv(n)||function k_(n,t){return n[Mv]=t}(n,{previous:qo,current:null}),s=o.current||(o.current={}),a=o.previous,l=a[i];s[i]=new Td(l&&l.currentValue,t,a===qo),n[r]=t}go.ngInherit=!0;const Mv="__ngSimpleChanges__";function xv(n){return n[Mv]||null}function gi(n){for(;Array.isArray(n);)n=n[0];return n}function Md(n,t){return gi(t[n])}function mo(n,t){return gi(t[n.index])}function qc(n,t){return n.data[t]}function yl(n,t){return n[t]}function vo(n,t){const e=t[n];return po(e)?e:e[0]}function xd(n){return 64==(64&n[2])}function Ba(n,t){return null==t?null:n[t]}function $c(n){n[18]=0}function wp(n,t){n[5]+=t;let e=n,r=n[3];for(;null!==r&&(1===t&&1===e[5]||-1===t&&0===e[5]);)r[5]+=t,e=r,r=r[3]}const Ht={lFrame:jv(null),bindingsEnabled:!0};function Pv(){return Ht.bindingsEnabled}function Qe(){return Ht.lFrame.lView}function gn(){return Ht.lFrame.tView}function Tn(n){return Ht.lFrame.contextLView=n,n[8]}function Un(n){return Ht.lFrame.contextLView=null,n}function mi(){let n=Uv();for(;null!==n&&64===n.type;)n=n.parent;return n}function Uv(){return Ht.lFrame.currentTNode}function ps(n,t){const e=Ht.lFrame;e.currentTNode=n,e.isParent=t}function _p(){return Ht.lFrame.isParent}function Ld(){Ht.lFrame.isParent=!1}function Vi(){const n=Ht.lFrame;let t=n.bindingRootIndex;return-1===t&&(t=n.bindingRootIndex=n.tView.bindingStartIndex),t}function wl(){return Ht.lFrame.bindingIndex++}function Vs(n){const t=Ht.lFrame,e=t.bindingIndex;return t.bindingIndex=t.bindingIndex+n,e}function X_(n,t){const e=Ht.lFrame;e.bindingIndex=e.bindingRootIndex=n,Cp(t)}function Cp(n){Ht.lFrame.currentDirectiveIndex=n}function bp(n){const t=Ht.lFrame.currentDirectiveIndex;return-1===t?null:n[t]}function Bp(){return Ht.lFrame.currentQueryIndex}function Ep(n){Ht.lFrame.currentQueryIndex=n}function Z_(n){const t=n[1];return 2===t.type?t.declTNode:1===t.type?n[6]:null}function Hv(n,t,e){if(e&Bt.SkipSelf){let i=t,o=n;for(;!(i=i.parent,null!==i||e&Bt.Host||(i=Z_(o),null===i||(o=o[15],10&i.type))););if(null===i)return!1;t=i,n=o}const r=Ht.lFrame=Vv();return r.currentTNode=t,r.lView=n,!0}function Ip(n){const t=Vv(),e=n[1];Ht.lFrame=t,t.currentTNode=e.firstChild,t.lView=n,t.tView=e,t.contextLView=n,t.bindingIndex=e.bindingStartIndex,t.inI18n=!1}function Vv(){const n=Ht.lFrame,t=null===n?null:n.child;return null===t?jv(n):t}function jv(n){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:n,child:null,inI18n:!1};return null!==n&&(n.child=t),t}function Dp(){const n=Ht.lFrame;return Ht.lFrame=n.parent,n.currentTNode=null,n.lView=null,n}const ut=Dp;function Fp(){const n=Dp();n.isParent=!0,n.tView=null,n.selectedIndex=-1,n.contextLView=null,n.elementDepthCount=0,n.currentDirectiveIndex=-1,n.currentNamespace=null,n.bindingRootIndex=-1,n.bindingIndex=-1,n.currentQueryIndex=0}function ur(){return Ht.lFrame.selectedIndex}function mA(n){Ht.lFrame.selectedIndex=n}function dr(){const n=Ht.lFrame;return qc(n.tView,n.selectedIndex)}function _l(n,t){for(let e=t.directiveStart,r=t.directiveEnd;e<r;e++){const o=n.data[e].type.prototype,{ngAfterContentInit:s,ngAfterContentChecked:a,ngAfterViewInit:l,ngAfterViewChecked:c,ngOnDestroy:f}=o;s&&(n.contentHooks||(n.contentHooks=[])).push(-e,s),a&&((n.contentHooks||(n.contentHooks=[])).push(e,a),(n.contentCheckHooks||(n.contentCheckHooks=[])).push(e,a)),l&&(n.viewHooks||(n.viewHooks=[])).push(-e,l),c&&((n.viewHooks||(n.viewHooks=[])).push(e,c),(n.viewCheckHooks||(n.viewCheckHooks=[])).push(e,c)),null!=f&&(n.destroyHooks||(n.destroyHooks=[])).push(e,f)}}function Cl(n,t,e){Kv(n,t,3,e)}function Od(n,t,e,r){(3&n[2])===e&&Kv(n,t,e,r)}function Pd(n,t){let e=n[2];(3&e)===t&&(e&=2047,e+=1,n[2]=e)}function Kv(n,t,e,r){const o=r??-1,s=t.length-1;let a=0;for(let l=void 0!==r?65535&n[18]:0;l<s;l++)if("number"==typeof t[l+1]){if(a=t[l],null!=r&&a>=r)break}else t[l]<0&&(n[18]+=65536),(a<o||-1==o)&&(Tp(n,e,t,l),n[18]=(4294901760&n[18])+l+2),l++}function Tp(n,t,e,r){const i=e[r]<0,o=e[r+1],a=n[i?-e[r]:e[r]];if(i){if(n[2]>>11<n[18]>>16&&(3&n[2])===t){n[2]+=2048;try{o.call(a)}finally{}}}else try{o.call(a)}finally{}}class Yc{constructor(t,e,r){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=r}}function xp(n,t,e){let r=0;for(;r<e.length;){const i=e[r];if("number"==typeof i){if(0!==i)break;r++;const o=e[r++],s=e[r++],a=e[r++];n.setAttribute(t,s,a,o)}else{const o=i,s=e[++r];Lp(o)?n.setProperty(t,o,s):n.setAttribute(t,o,s),r++}}return r}function zv(n){return 3===n||4===n||6===n}function Lp(n){return 64===n.charCodeAt(0)}function Zc(n,t){if(null!==t&&0!==t.length)if(null===n||0===n.length)n=t.slice();else{let e=-1;for(let r=0;r<t.length;r++){const i=t[r];"number"==typeof i?e=i:0===e||Jc(n,e,i,null,-1===e||2===e?t[++r]:null)}}return n}function Jc(n,t,e,r,i){let o=0,s=n.length;if(-1===t)s=-1;else for(;o<n.length;){const a=n[o++];if("number"==typeof a){if(a===t){s=-1;break}if(a>t){s=o-1;break}}}for(;o<n.length;){const a=n[o];if("number"==typeof a)break;if(a===e){if(null===r)return void(null!==i&&(n[o+1]=i));if(r===n[o+1])return void(n[o+2]=i)}o++,null!==r&&o++,null!==i&&o++}-1!==s&&(n.splice(s,0,t),o=s+1),n.splice(o++,0,e),null!==r&&n.splice(o++,0,r),null!==i&&n.splice(o++,0,i)}function Gv(n){return-1!==n}function Bl(n){return 32767&n}function eu(n,t){let e=function Np(n){return n>>16}(n),r=t;for(;e>0;)r=r[15],e--;return r}let Ud=!0;function Rd(n){const t=Ud;return Ud=n,t}let Wv=0;const Yo={};function tu(n,t){const e=$v(n,t);if(-1!==e)return e;const r=t[1];r.firstCreatePass&&(n.injectorIndex=t.length,nu(r.data,n),nu(t,null),nu(r.blueprint,null));const i=Op(n,t),o=n.injectorIndex;if(Gv(i)){const s=Bl(i),a=eu(i,t),l=a[1].data;for(let c=0;c<8;c++)t[o+c]=a[s+c]|l[s+c]}return t[o+8]=i,o}function nu(n,t){n.push(0,0,0,0,0,0,0,0,t)}function $v(n,t){return-1===n.injectorIndex||n.parent&&n.parent.injectorIndex===n.injectorIndex||null===t[n.injectorIndex+8]?-1:n.injectorIndex}function Op(n,t){if(n.parent&&-1!==n.parent.injectorIndex)return n.parent.injectorIndex;let e=0,r=null,i=t;for(;null!==i;){if(r=El(i),null===r)return-1;if(e++,i=i[15],-1!==r.injectorIndex)return r.injectorIndex|e<<16}return-1}function Pp(n,t,e){!function qv(n,t,e){let r;"string"==typeof e?r=e.charCodeAt(0)||0:e.hasOwnProperty(fl)&&(r=e[fl]),null==r&&(r=e[fl]=Wv++);const i=255&r;t.data[n+(i>>5)]|=1<<i}(n,t,e)}function Hd(n,t,e){if(e&Bt.Optional||void 0!==n)return n;dl()}function Xv(n,t,e,r){if(e&Bt.Optional&&void 0===r&&(r=null),!(e&(Bt.Self|Bt.Host))){const i=n[9],o=Vr(void 0);try{return i?i.get(t,r,e&Bt.Optional):Nc(t,r,e&Bt.Optional)}finally{Vr(o)}}return Hd(r,0,e)}function Yv(n,t,e,r=Bt.Default,i){if(null!==n){if(1024&t[2]){const s=function vi(n,t,e,r,i){let o=n,s=t;for(;null!==o&&null!==s&&1024&s[2]&&!(256&s[2]);){const a=Zv(o,s,e,r|Bt.Self,Yo);if(a!==Yo)return a;let l=o.parent;if(!l){const c=s[21];if(c){const f=c.get(e,Yo,r);if(f!==Yo)return f}l=El(s),s=s[15]}o=l}return i}(n,t,e,r,Yo);if(s!==Yo)return s}const o=Zv(n,t,e,r,Yo);if(o!==Yo)return o}return Xv(t,e,r,i)}function Zv(n,t,e,r,i){const o=function lC(n){if("string"==typeof n)return n.charCodeAt(0)||0;const t=n.hasOwnProperty(fl)?n[fl]:void 0;return"number"==typeof t?t>=0?255&t:cC:t}(e);if("function"==typeof o){if(!Hv(t,n,r))return r&Bt.Host?Hd(i,0,r):Xv(t,e,r,i);try{const s=o(r);if(null!=s||r&Bt.Optional)return s;dl()}finally{ut()}}else if("number"==typeof o){let s=null,a=$v(n,t),l=-1,c=r&Bt.Host?t[16][6]:null;for((-1===a||r&Bt.SkipSelf)&&(l=-1===a?Op(n,t):t[a+8],-1!==l&&e0(r,!1)?(s=t[1],a=Bl(l),t=eu(l,t)):a=-1);-1!==a;){const f=t[1];if(Jv(o,a,f.data)){const v=AC(a,t,e,s,r,c);if(v!==Yo)return v}l=t[a+8],-1!==l&&e0(r,t[1].data[a+8]===c)&&Jv(o,a,t)?(s=f,a=Bl(l),t=eu(l,t)):a=-1}}return i}function AC(n,t,e,r,i,o){const s=t[1],a=s.data[n+8],f=Vd(a,s,e,null==r?zc(a)&&Ud:r!=s&&0!=(3&a.type),i&Bt.Host&&o===a);return null!==f?yA(t,s,f,a):Yo}function Vd(n,t,e,r,i){const o=n.providerIndexes,s=t.data,a=1048575&o,l=n.directiveStart,f=o>>20,C=i?a+f:n.directiveEnd;for(let y=r?a:a+f;y<C;y++){const E=s[y];if(y<l&&e===E||y>=l&&E.type===e)return y}if(i){const y=s[l];if(y&&Xo(y)&&y.type===e)return l}return null}function yA(n,t,e,r){let i=n[e];const o=t.data;if(function rC(n){return n instanceof Yc}(i)){const s=i;s.resolving&&function __(n,t){const e=t?`. Dependency path: ${t.join(" > ")} > ${n}`:"";throw new xe(-200,`Circular dependency in DI detected for ${n}${e}`)}(function bn(n){return"function"==typeof n?n.name||n.toString():"object"==typeof n&&null!=n&&"function"==typeof n.type?n.type.name||n.type.toString():kt(n)}(o[e]));const a=Rd(s.canSeeViewProviders);s.resolving=!0;const l=s.injectImpl?Vr(s.injectImpl):null;Hv(n,r,Bt.Default);try{i=n[e]=s.factory(void 0,o,n,r),t.firstCreatePass&&e>=r.directiveStart&&function vA(n,t,e){const{ngOnChanges:r,ngOnInit:i,ngDoCheck:o}=t.type.prototype;if(r){const s=Tv(t);(e.preOrderHooks||(e.preOrderHooks=[])).push(n,s),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n,s)}i&&(e.preOrderHooks||(e.preOrderHooks=[])).push(0-n,i),o&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n,o),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n,o))}(e,o[e],t)}finally{null!==l&&Vr(l),Rd(a),s.resolving=!1,ut()}}return i}function Jv(n,t,e){return!!(e[t+(n>>5)]&1<<n)}function e0(n,t){return!(n&Bt.Self||n&Bt.Host&&t)}class wA{constructor(t,e){this._tNode=t,this._lView=e}get(t,e,r){return Yv(this._tNode,this._lView,t,Ed(r),e)}}function cC(){return new wA(mi(),Qe())}function Kr(n){return Rs(()=>{const t=n.prototype.constructor,e=t[Qn]||jd(t),r=Object.prototype;let i=Object.getPrototypeOf(n.prototype).constructor;for(;i&&i!==r;){const o=i[Qn]||jd(i);if(o&&o!==e)return o;i=Object.getPrototypeOf(i)}return o=>new o})}function jd(n){return op(n)?()=>{const t=jd(Ft(n));return t&&t()}:gA(n)}function El(n){const t=n[1],e=t.type;return 2===e?t.declTNode:1===e?n[6]:null}function ru(n){return function xo(n,t){if("class"===t)return n.classes;if("style"===t)return n.styles;const e=n.attrs;if(e){const r=e.length;let i=0;for(;i<r;){const o=e[i];if(zv(o))break;if(0===o)i+=2;else if("number"==typeof o)for(i++;i<r&&"string"==typeof e[i];)i++;else{if(o===t)return e[i+1];i+=2}}}return null}(mi(),n)}const _A="__parameters__";function Dl(n,t,e){return Rs(()=>{const r=function Up(n){return function(...e){if(n){const r=n(...e);for(const i in r)this[i]=r[i]}}}(t);function i(...o){if(this instanceof i)return r.apply(this,o),this;const s=new i(...o);return a.annotation=s,a;function a(l,c,f){const v=l.hasOwnProperty(_A)?l[_A]:Object.defineProperty(l,_A,{value:[]})[_A];for(;v.length<=f;)v.push(null);return(v[f]=v[f]||[]).push(s),l}}return e&&(i.prototype=Object.create(e.prototype)),i.prototype.ngMetadataName=n,i.annotationCls=i,i})}class tt{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=lt({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}function js(n,t){n.forEach(e=>Array.isArray(e)?js(e,t):t(e))}function Rp(n,t,e){t>=n.length?n.push(e):n.splice(t,0,e)}function ou(n,t){return t>=n.length-1?n.pop():n.splice(t,1)[0]}function Sl(n,t){const e=[];for(let r=0;r<n;r++)e.push(t);return e}function wo(n,t,e){let r=CA(n,t);return r>=0?n[1|r]=e:(r=~r,function r0(n,t,e,r){let i=n.length;if(i==t)n.push(e,r);else if(1===i)n.push(r,n[0]),n[0]=e;else{for(i--,n.push(n[i-1],n[i]);i>t;)n[i]=n[i-2],i--;n[t]=e,n[t+1]=r}}(n,r,t,e)),r}function kp(n,t){const e=CA(n,t);if(e>=0)return n[1|e]}function CA(n,t){return function Kd(n,t,e){let r=0,i=n.length>>e;for(;i!==r;){const o=r+(i-r>>1),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                i.staticContentQueries=!0)}U5(i,Qe(),e)}function ts(){return function Bk(n,t){return n[19].queries[t].queryList}(Qe(),Bp())}function U5(n,t,e){const r=new Ub(4==(4&e));EF(n,t,r,r.destroy),null===t[19]&&(t[19]=new kb),t[19].queries.push(new Qb(r))}function R5(n,t,e){null===n.queries&&(n.queries=new Hb),n.queries.track(new Vb(t,e))}function Q5(n,t){return n.queries.getByIndex(t)}function Ys(n,t){return ey(n,t)}function ny(...n){}const ry=new tt("Application Initializer");let iy=(()=>{class n{constructor(e){this.appInits=e,this.resolve=ny,this.reject=ny,this.initialized=!1,this.done=!1,this.donePromise=new Promise((r,i)=>{this.resolve=r,this.reject=i})}runInitializers(){if(this.initialized)return;const e=[],r=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let i=0;i<this.appInits.length;i++){const o=this.appInits[i]();if(hg(o))e.push(o);else if(_b(o)){const s=new Promise((a,l)=>{o.subscribe({complete:a,error:l})});e.push(s)}}Promise.all(e).then(()=>{r()}).catch(i=>{this.reject(i)}),0===e.length&&r(),this.initialized=!0}}return n.\u0275fac=function(e){return new(e||n)(Ge(ry,8))},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const bg=new tt("AppId",{providedIn:"root",factory:function iT(){return`${qb()}${qb()}${qb()}`}});function qb(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const oT=new tt("Platform Initializer"),oy=new tt("Platform ID",{providedIn:"platform",factory:()=>"unknown"}),sT=new tt("appBootstrapListener"),aT=new tt("AnimationModuleType");let zk=(()=>{class n{log(e){console.log(e)}warn(e){console.warn(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();const Ha=new tt("LocaleId",{providedIn:"root",factory:()=>Kt(Ha,Bt.Optional|Bt.SkipSelf)||function Gk(){return typeof $localize<"u"&&$localize.locale||Bh}()});class qk{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}let AT=(()=>{class n{compileModuleSync(e){return new Nb(e)}compileModuleAsync(e){return Promise.resolve(this.compileModuleSync(e))}compileModuleAndAllComponentsSync(e){const r=this.compileModuleSync(e),o=xA(Lr(e).declarations).reduce((s,a)=>{const l=En(a);return l&&s.push(new ug(l)),s},[]);return new qk(r,o)}compileModuleAndAllComponentsAsync(e){return Promise.resolve(this.compileModuleAndAllComponentsSync(e))}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Yk=(()=>Promise.resolve(0))();function $b(n){typeof Zone>"u"?Yk.then(()=>{n&&n.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",n)}class tr{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:r=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new yn(!1),this.onMicrotaskEmpty=new yn(!1),this.onStable=new yn(!1),this.onError=new yn(!1),typeof Zone>"u")throw new xe(908,!1);Zone.assertZonePatched();const i=this;i._nesting=0,i._outer=i._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(i._inner=i._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(i._inner=i._inner.fork(Zone.longStackTraceZoneSpec)),i.shouldCoalesceEventChangeDetection=!r&&e,i.shouldCoalesceRunChangeDetection=r,i.lastRequestAnimationFrameId=-1,i.nativeRequestAnimationFrame=function Zk(){let n=Yn.requestAnimationFrame,t=Yn.cancelAnimationFrame;if(typeof Zone<"u"&&n&&t){const e=n[Zone.__symbol__("OriginalDelegate")];e&&(n=e);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:n,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function tH(n){const t=()=>{!function eH(n){n.isCheckStableRunning||-1!==n.lastRequestAnimationFrameId||(n.lastRequestAnimationFrameId=n.nativeRequestAnimationFrame.call(Yn,()=>{n.fakeTopEventTask||(n.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{n.lastRequestAnimationFrameId=-1,Yb(n),n.isCheckStableRunning=!0,Xb(n),n.isCheckStableRunning=!1},void 0,()=>{},()=>{})),n.fakeTopEventTask.invoke()}),Yb(n))}(n)};n._inner=n._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(e,r,i,o,s,a)=>{try{return uT(n),e.invokeTask(i,o,s,a)}finally{(n.shouldCoalesceEventChangeDetection&&"eventTask"===o.type||n.shouldCoalesceRunChangeDetection)&&t(),dT(n)}},onInvoke:(e,r,i,o,s,a,l)=>{try{return uT(n),e.invoke(i,o,s,a,l)}finally{n.shouldCoalesceRunChangeDetection&&t(),dT(n)}},onHasTask:(e,r,i,o)=>{e.hasTask(i,o),r===i&&("microTask"==o.change?(n._hasPendingMicrotasks=o.microTask,Yb(n),Xb(n)):"macroTask"==o.change&&(n.hasPendingMacrotasks=o.macroTask))},onHandleError:(e,r,i,o)=>(e.handleError(i,o),n.runOutsideAngular(()=>n.onError.emit(o)),!1)})}(i)}static isInAngularZone(){return typeof Zone<"u"&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!tr.isInAngularZone())throw new xe(909,!1)}static assertNotInAngularZone(){if(tr.isInAngularZone())throw new xe(909,!1)}run(t,e,r){return this._inner.run(t,e,r)}runTask(t,e,r,i){const o=this._inner,s=o.scheduleEventTask("NgZoneEvent: "+i,t,Jk,ny,ny);try{return o.runTask(s,e,r)}finally{o.cancelTask(s)}}runGuarded(t,e,r){return this._inner.runGuarded(t,e,r)}runOutsideAngular(t){return this._outer.run(t)}}const Jk={};function Xb(n){if(0==n._nesting&&!n.hasPendingMicrotasks&&!n.isStable)try{n._nesting++,n.onMicrotaskEmpty.emit(null)}finally{if(n._nesting--,!n.hasPendingMicrotasks)try{n.runOutsideAngular(()=>n.onStable.emit(null))}finally{n.isStable=!0}}}function Yb(n){n.hasPendingMicrotasks=!!(n._hasPendingMicrotasks||(n.shouldCoalesceEventChangeDetection||n.shouldCoalesceRunChangeDetection)&&-1!==n.lastRequestAnimationFrameId)}function uT(n){n._nesting++,n.isStable&&(n.isStable=!1,n.onUnstable.emit(null))}function dT(n){n._nesting--,Xb(n)}class nH{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new yn,this.onMicrotaskEmpty=new yn,this.onStable=new yn,this.onError=new yn}run(t,e,r){return t.apply(e,r)}runGuarded(t,e,r){return t.apply(e,r)}runOutsideAngular(t){return t()}runTask(t,e,r,i){return t.apply(e,r)}}const hT=new tt(""),sy=new tt("");let eB,Zb=(()=>{class n{constructor(e,r,i){this._ngZone=e,this.registry=r,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,eB||(function rH(n){eB=n}(i),i.addToWindow(r)),this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone=typeof Zone>"u"?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{tr.assertNotInAngularZone(),$b(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())$b(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(r=>!r.updateCb||!r.updateCb(e)||(clearTimeout(r.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,r,i){let o=-1;r&&r>0&&(o=setTimeout(()=>{this._callbacks=this._callbacks.filter(s=>s.timeoutId!==o),e(this._didWork,this.getPendingTasks())},r)),this._callbacks.push({doneCb:e,timeoutId:o,updateCb:i})}whenStable(e,r,i){if(i&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,r,i),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}registerApplication(e){this.registry.registerApplication(e,this)}unregisterApplication(e){this.registry.unregisterApplication(e)}findProviders(e,r,i){return[]}}return n.\u0275fac=function(e){return new(e||n)(Ge(tr),Ge(Jb),Ge(sy))},n.\u0275prov=lt({token:n,factory:n.\u0275fac}),n})(),Jb=(()=>{class n{constructor(){this._applications=new Map}registerApplication(e,r){this._applications.set(e,r)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,r=!0){return eB?.findTestabilityInTree(this,e,r)??null}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})(),Rl=null;const fT=new tt("AllowMultipleToken"),tB=new tt("PlatformDestroyListeners");class pT{constructor(t,e){this.name=t,this.token=e}}function mT(n,t,e=[]){const r=`Platform: ${t}`,i=new tt(r);return(o=[])=>{let s=nB();if(!s||s.injector.get(fT,!1)){const a=[...e,...o,{provide:i,useValue:!0}];n?n(a):function sH(n){if(Rl&&!Rl.get(fT,!1))throw new xe(400,!1);Rl=n;const t=n.get(yT);(function gT(n){const t=n.get(oT,null);t&&t.forEach(e=>e())})(n)}(function vT(n=[],t){return No.create({name:t,providers:[{provide:qC,useValue:"platform"},{provide:tB,useValue:new Set([()=>Rl=null])},...n]})}(a,r))}return function AH(n){const t=nB();if(!t)throw new xe(401,!1);return t}()}}function nB(){return Rl?.get(yT)??null}let yT=(()=>{class n{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,r){const i=function _T(n,t){let e;return e="noop"===n?new nH:("zone.js"===n?void 0:n)||new tr(t),e}(r?.ngZone,function wT(n){return{enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:!(!n||!n.ngZoneEventCoalescing)||!1,shouldCoalesceRunChangeDetection:!(!n||!n.ngZoneRunCoalescing)||!1}}(r)),o=[{provide:tr,useValue:i}];return i.run(()=>{const s=No.create({providers:o,parent:this.injector,name:e.moduleType.name}),a=e.create(s),l=a.injector.get(MA,null);if(!l)throw new xe(402,!1);return i.runOutsideAngular(()=>{const c=i.onError.subscribe({next:f=>{l.handleError(f)}});a.onDestroy(()=>{ay(this._modules,a),c.unsubscribe()})}),function CT(n,t,e){try{const r=e();return hg(r)?r.catch(i=>{throw t.runOutsideAngular(()=>n.handleError(i)),i}):r}catch(r){throw t.runOutsideAngular(()=>n.handleError(r)),r}}(l,i,()=>{const c=a.injector.get(iy);return c.runInitializers(),c.donePromise.then(()=>(function KS(n){co(n,"Expected localeId to be defined"),"string"==typeof n&&(jS=n.toLowerCase().replace(/_/g,"-"))}(a.injector.get(Ha,Bh)||Bh),this._moduleDoBootstrap(a),a))})})}bootstrapModule(e,r=[]){const i=bT({},r);return function iH(n,t,e){const r=new Nb(e);return Promise.resolve(r)}(0,0,e).then(o=>this.bootstrapModuleFactory(o,i))}_moduleDoBootstrap(e){const r=e.injector.get(Iu);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(i=>r.bootstrap(i));else{if(!e.instance.ngDoBootstrap)throw new xe(-403,!1);e.instance.ngDoBootstrap(r)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new xe(404,!1);this._modules.slice().forEach(r=>r.destroy()),this._destroyListeners.forEach(r=>r());const e=this._injector.get(tB,null);e&&(e.forEach(r=>r()),e.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}}return n.\u0275fac=function(e){return new(e||n)(Ge(No))},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();function bT(n,t){return Array.isArray(t)?t.reduce(bT,n):{...n,...t}}let Iu=(()=>{class n{get destroyed(){return this._destroyed}get injector(){return this._injector}constructor(e,r,i){this._zone=e,this._injector=r,this._exceptionHandler=i,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this._destroyed=!1,this._destroyListeners=[],this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const o=new vr(a=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{a.next(this._stable),a.complete()})}),s=new vr(a=>{let l;this._zone.runOutsideAngular(()=>{l=this._zone.onStable.subscribe(()=>{tr.assertNotInAngularZone(),$b(()=>{!this._stable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks&&(this._stable=!0,a.next(!0))})})});const c=this._zone.onUnstable.subscribe(()=>{tr.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{a.next(!1)}))});return()=>{l.unsubscribe(),c.unsubscribe()}});this.isStable=function y_(...n){const t=Mc(n),e=function m_(n,t){return"number"==typeof rp(n)?n.pop():t}(n,1/0),r=n;return r.length?1===r.length?lo(r[0]):ll(e)(xr(r,t)):Fo}(o,s.pipe(yv()))}bootstrap(e,r){const i=e instanceof tF;if(!this._injector.get(iy).done)throw!i&&function uo(n){const t=En(n)||fi(n)||Zn(n);return null!==t&&t.standalone}(e),new xe(405,false);let s;s=i?e:this._injector.get(sh).resolveComponentFactory(e),this.componentTypes.push(s.componentType);const a=function oH(n){return n.isBoundToModule}(s)?void 0:this._injector.get(Eh),c=s.create(No.NULL,[],r||s.selector,a),f=c.location.nativeElement,v=c.injector.get(hT,null);return v?.registerApplication(f),c.onDestroy(()=>{this.detachView(c.hostView),ay(this.components,c),v?.unregisterApplication(f)}),this._loadComponent(c),c}tick(){if(this._runningTick)throw new xe(101,!1);try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const r=e;this._views.push(r),r.attachToAppRef(this)}detachView(e){const r=e;ay(this._views,r),r.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e);const r=this._injector.get(sT,[]);r.push(...this._bootstrapListeners),r.forEach(i=>i(e))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(e=>e()),this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}finally{this._destroyed=!0,this._views=[],this._bootstrapListeners=[],this._destroyListeners=[]}}onDestroy(e){return this._destroyListeners.push(e),()=>ay(this._destroyListeners,e)}destroy(){if(this._destroyed)throw new xe(406,!1);const e=this._injector;e.destroy&&!e.destroyed&&e.destroy()}get viewCount(){return this._views.length}warnIfDestroyed(){}}return n.\u0275fac=function(e){return new(e||n)(Ge(tr),Ge(Pa),Ge(MA))},n.\u0275prov=lt({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function ay(n,t){const e=n.indexOf(t);e>-1&&n.splice(e,1)}let Ql=(()=>{class n{}return n.__NG_ELEMENT_ID__=cH,n})();function cH(n){return function uH(n,t,e){if(zc(n)&&!e){const r=vo(n.index,t);return new cg(r,r)}return 47&n.type?new cg(t[16],t):null}(mi(),Qe(),16==(16&n))}class FT{constructor(){}supports(t){return j0(t)}create(t){return new mH(t)}}const gH=(n,t)=>t;class mH{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||gH}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,r=this._removalsHead,i=0,o=null;for(;e||r;){const s=!r||e&&e.currentIndex<TT(r,i,o)?e:r,a=TT(s,i,o),l=s.currentIndex;if(s===r)i--,r=r._nextRemoved;else if(e=e._next,null==s.previousIndex)i++;else{o||(o=[]);const c=a-i,f=l-i;if(c!=f){for(let C=0;C<c;C++){const y=C<o.length?o[C]:o[C]=0,E=y+C;f<=E&&E<c&&(o[C]=y+1)}o[s.previousIndex]=f-c}}a!==l&&t(s,a,l)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!=